name: Django CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  # Linting job
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install pre-commit hooks
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
          pre-commit install

      - name: Run pre-commit hooks
        run: |
          pre-commit run --show-diff-on-failure --color=always --all-files

  # Testing job
  test:
    runs-on: ubuntu-latest
    needs: lint
    env:
      DJANGO_SETTINGS_MODULE: root.settings.dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: '22'
      POSTGRES_DB: ppr

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: '22'
          POSTGRES_DB: ppr
        ports:
          - "5432:5432"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run migrations
        run: |
          python manage.py migrate

      - name: Run tests with pytest
        run: |
          pytest --maxfail=1 --disable-warnings -q

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          script: |
            cd C:/Users/HP/PycharmProjects/ppr
            git pull origin main
            docker-compose -f local.yml down
            docker-compose -f local.yml up --build -d
            docker-compose -f local.yml run --rm web python manage.py migrate
            docker-compose -f local.yml run --rm web python manage.py collectstatic --noinput
